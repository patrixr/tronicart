var W=Object.defineProperty;var n=(c,e)=>W(c,"name",{value:e,configurable:!0});var v=window;var w=n(()=>v,"getGlobalP5");function k(c,e=w()){return e.color(e.red(c),e.green(c),e.blue(c),e.alpha(c))}n(k,"copyColor");var I=n((c,e)=>{let o=[],{size:i=c,strokes:m=[!0,!0,!0]}=e;for(let l=Math.PI/6;l<Math.PI*2;l+=Math.PI/3)o.push({x:Math.cos(l)*i,y:Math.sin(l)*i});let a=[{x:0,y:0},{x:o[5].x,y:o[5].y},{x:o[0].x,y:o[0].y},{x:o[1].x,y:o[1].y}],P=[{x:0,y:0},{x:o[1].x,y:o[1].y},{x:o[2].x,y:o[2].y},{x:o[3].x,y:o[3].y}],M=[{x:0,y:0},{x:o[3].x,y:o[3].y},{x:o[4].x,y:o[4].y},{x:o[5].x,y:o[5].y}];return{quads:3,type:0,draw(l){let{color:q=l.color(255,100,80),opacity:d=255}=e;[a,P,M].forEach(([f,h,r,t],s)=>{let u=k(q,l),p=(s+1)/3;u.setAlpha(d),m[s]?l.stroke(0,0,0):l.noStroke(),l.fill(l.red(u)*p,l.green(u)*p,l.blue(u)*p,d),l.quad(f.x,f.y,h.x,h.y,r.x,r.y,t.x,t.y)})}}},"createCube");var g=n((c,e)=>{let o=[{x:0,y:0}];for(let i=Math.PI/6;i<Math.PI;i+=Math.PI/3)o.push({x:Math.cos(i)*c,y:Math.sin(i)*c});return{quads:1,type:1,draw(i){i.stroke(0,0,0),i.fill(255,255,80,50),i.quad(o[0].x,o[0].y,o[1].x,o[1].y,o[2].x,o[2].y,o[3].x,o[3].y)}}},"createPlane");var O=n((c,e,o)=>({quads:0,type:2,draw(i){let{color:m=i.color(255,100,80),opacity:a=255,weight:P=1}=o;i.noFill(),i.stroke(m),i.strokeWeight(P),i.line(0,0,c,e)}}),"createLine");var j=n(c=>({quads:0,type:3,draw(e){let{color:o=e.color(255,100,80),opacity:i=255,weight:m=1}=c;e.noFill(),e.stroke(o),e.strokeWeight(m),e.circle(0,0,1)}}),"createPoint");var x=(a=>(a[a.Cube=0]="Cube",a[a.Plane=1]="Plane",a[a.Line=2]="Line",a[a.Point=3]="Point",a[a.Composition=4]="Composition",a))(x||{});function Co(c){let e=[],o={},i=n((r,t,s)=>`${Math.floor(r)}-${Math.floor(t)}-${Math.floor(s)}`,"hashKey"),m=n((r,t,s,u)=>{let p=i(r,t,s);o[p]??=0,o[p]++;for(let y=0;y<e.length;++y){let{location:b,obj:C}=e[y];if(!(r>b.x)&&!(t>b.y)&&!(s>b.z)&&!(u.quads>C.quads)){e.splice(y,0,{location:{x:r,y:t,z:s},obj:u});return}}e.push({location:{x:r,y:t,z:s},obj:u})},"add"),a=n((r,t,s)=>{let u=(r-t)*c*Math.sqrt(3)/2,p=(r+t)*c/2-c*s;return{x:u,y:p}},"convertCoordinates");return{draw:n((r,t,s)=>{e.forEach(({location:u,obj:p})=>{let{x:y,y:b}=a(u.x,u.y,u.z);r.push(),r.translate(t+y,s+b),p.draw(r),r.pop()})},"draw"),add:m,point:n((r,t,s=0,u={})=>{m(r,t,s,j(u))},"point"),cube:n((r,t,s,u={})=>{m(r,t,s,I(c,u))},"cube"),plane:n((r,t,s=0,u={})=>{m(r,t,s,g(c,u))},"plane"),clear:n(()=>e.length=0,"clear"),line:n((r,t,s,u,p,y,b={})=>{let C=u-r,L=p-t,V=y-s,{x:Q,y:G}=a(C,L,V);m(r,t,s,O(Q,G,b))},"line"),cellSize:c,lookup:n(r=>r?e.find(t=>t.obj.type===r):e,"lookup"),createCube:I,createPlane:g}}n(Co,"createIsometricWorld");export{x as IsoObjectTypes,Co as createIsometricWorld};
